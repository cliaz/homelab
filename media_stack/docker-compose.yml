x-extra_hosts:
  # This is added so that within each service/container you can communicate to another service by using a DNS rather
  # than using IP address. Makes it easy if the IP address changes. For example, when configuring Radarr, you can
  # configure the transmission client url as http://host-server:9091

  # Pulls the IP address of the host from the .env file
  &host-server
  - "host-server:${HOST_IP}"
services:
  # All the services use docker bind mounts to store config data and media on the host's filesystem. If you're familiar with
  # docker storage, you can use whatever you want. You can change it to use docker volumes if you want.
  #
  # Nearly all the containers can be run as non root. This is controlled by PUID and PGID environment variables.
  # Make sure any volume directories on the host are owned by the same user you specify to run the container as. Else
  # you may have permissions issues.
  #
  # If you dont want any service, you can delete that section. Alternatively, if you want to use another service or
  # add more services, you can add/change them in this file.
  # For example: if you want to use Emby instead of Plex, you can change the plex service to emby. Linuxserver.io
  # provide most of the docker images that you would need. They provide a docker image for emby as well.
  #
  # Each services runs on a different port number. Plex and transmission-openvpn uses host networking mode whereas all
  # the other services use docker bridge networking and have host ports mapped to container ports. For these you can
  # change the mapping between host ports and container ports. Port mapping is in the format <host_port>:<container_port>

  # Media streaming
  plex:
    image: linuxserver/plex:latest
    container_name: plex
    hostname: plex
    extra_hosts: *host-server
    network_mode: host # TODO: why is this on network mode host?
    devices:
      # This basically mounts the GPU device on the host to the container, needed for hardware transcoding.
      # For a RPi 4 this won't do anything as plex does not support transcoding on anything other than Intel quicksync.
      # You can comment or delete this if you want. Leaving it as it is won't do any harm.
      - "/dev/dri:/dev/dri"
    restart: unless-stopped
    ports:
      - 32400:32400
      # NOTE: Please delete this entire `devices` section if your device does not have /dev/dri device. If you using something
      # like RPi3, you would need to delete this section else you will get an error when trying to run this container.
    environment:
      PUID: ${PLEX_UID:?Please configure PLEX_UID in .env file}
      PGID: ${MEDIA_GID:?Please configure MEDIA_GID in .env file}
      TZ: ${TZ:-Australia/Melbourne}
      UMASK: 002
    volumes:
      # Docker bind mounts are used to store config and media on the host's filesystem. Config for plex will be stored
      # in the .env-defined CONFIG_DIR/plex/config directory and any transcoding data is stored in a transcode directory
      - ${CONFIG_DIR:?Please configure CONFIG_DIR in .env file}/plex/config:/config
      - ${DATA_DIR:?Please configure DATA_DIR in .env file}/media/plex_transcode:/transcode
      # Within plex, we are mounting the root of your media folder, as defined by the .env, to /all_media directory. So within plex, 
      # when you look inside /all_media directory you would see the same file structure as on the host
      - ${DATA_DIR:?Please configure DATA_DIR in .env file}/media:/data/media

  # Movies management
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    hostname: radarr
    extra_hosts: *host-server
    restart: unless-stopped
    networks:
      - media_net
    ports:
      # Host port 7878 is mapped to container port 7878
      - 7878:7878
    environment:
      # The container is run as the user with this PUID and PGID (user and group id).
      PUID: ${RADARR_UID:?Please configure RADARR_UID in .env file}
      PGID: ${MEDIA_GID:?Please configure MEDIA_GID in .env file}
      TZ: ${TZ:-Australia/Melbourne}
      UMASK: 002
    volumes:
      # config directory
      - ${CONFIG_DIR:?Please configure CONFIG_DIR in .env file}/radarr:/config
      # root directory, so that radarr can see downloads as well as stored media
      - ${DATA_DIR:?Please configure DATA_DIR in .env file}:/data

  # Series management
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    hostname: sonarr
    extra_hosts: *host-server
    restart: unless-stopped
    networks:
      - media_net
    ports:
      # Host port 8989 is mapped to container port 8989
      - 8989:8989
    environment:
      # The container is run as the user with this PUID and PGID (user and group id).
      PUID: ${SONARR_UID:?Please configure SONARR_UID in .env file}
      PGID: ${MEDIA_GID:?Please configure MEDIA_GID in .env file}
      TZ: ${TZ:-Australia/Melbourne}
      UMASK: 002
    volumes:
      # config directory
      - ${CONFIG_DIR:?Please configure CONFIG_DIR in .env file}/sonarr:/config
      # root directory, so that sonarr can see downloads as well as stored media
      - ${DATA_DIR:?Please configure DATA_DIR in .env file}:/data

  #Overseerr is used to manage media requests for both Sonarr and Radarr, combining them both into one portal
  overseerr:
    #image: sctx/overseerr:latest                 # this is the official overseerr image
    image: linuxserver/overseerr:latest   # using linuxserver.io image for now
    container_name: overseerr
    hostname: overseerr
    extra_hosts: *host-server
    restart: unless-stopped
    networks: 
      - media_net
    ports:
      - 5055:5055
    environment:
      PUID: ${OVERSEERR_UID:?Please configure OVERSEERR_UID in .env file}
      PGID: ${OVERSEERR_UID:?Please configure OVERSEERR_UID in .env file}
      TZ: ${TZ:-Australia/Melbourne}
      UMASK: 002
    volumes:
      - ${CONFIG_DIR:?Please configure CONFIG_DIR in .env file}/overseerr:/config

  # Tautulli is used to get stats on Plex usage
  # tautulli:
  #   image: linuxserver/tautulli:latest
  #   container_name: tautulli
  #   hostname: tautulli
  #   extra_hosts: *host-server
  #   restart: unless-stopped
  #   networks:
  #     - media_net
  #   ports:
  #     # Host port 8181 is mapped to container port 8181
  #     - 8181:8181
  #   environment:
  #     # The container is run as the user with this PUID and PGID (user and group id).
  #     PUID: ${TAUTULLI_UID:?Please configure TAUTULLI_UID in .env file}
  #     PGID: ${MEDIA_GID:?Please configure MEDIA_GID in .env file}
  #     TZ: ${TZ:-Australia/Melbourne}
  #     UMASK: 002
  #   volumes:
  #     # config directory
  #     - ${CONFIG_DIR:?Please configure CONFIG_DIR in .env file}/tautulli:/config
  #     # Tautulli needs access to plex logs. In the plex container we mounted ${CONFIG_DIR}/plex of the host as the
  #     # config directory for plex. Logs are located within this config directory
  #     - ${CONFIG_DIR:?Please configure CONFIG_DIR in .env file}/plex/config/Library/Application Support/Plex Media Server/Logs:/logs

networks:

  ## Assumption / Precondition: the network 'media_net' exists, either defined in core_services_stack or 
  ## manually via the command "docker network create --attachable --subnet=172.200.0.0/24 media_net"
  media_net:
    external: true
  ## Following network definition left for posterity
  # media_net:
  #   name: media_net   # ensure network isn't prefixed with the default name of the directory, eg git_media_stack_media_net
  #   attachable: true
  #   ipam:
  #     config:
  #       - subnet: 172.16.200.0/24
