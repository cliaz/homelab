services:  
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    hostname: watchtower
    network_mode: bridge
    restart: unless-stopped
    secrets:
      # Unsure if this is standard, but watchtower is treating these secrets as the references to
      # the actual files, not the contents of the files. This is why the file paths are used in the
      # environment variables below - eg /run/secrets/<secret_name>
      - watchtower_discord_API    # use for discord notifications
      - email_server_password     # use for email notifications
      
    ## Variable Substitution
    # If deploying this directly via `docker compose up` or from GitHub via Portainer, make sure the .env file is in the 
    # same folder as the service's docker-compose.yml file. Docker / Portainer will then load the values from the .env 
    # file and subsitute them into the compose file wherever the ${VAR_NAME} is found.
    # 
    # If deploying this from Portainer via their WebUI, variable substitution via an .env file will not be available.
    # In this case, load the .env file via Portainer when building the stack. This will load the variables
    # directly into the container, without passing them through the compose file - aka no variable substitution.    
    
    # Uncomment the below only if deploying locally via Portainer and loading variables from .env file
    #env_file:
    #  - stack.env

    environment:
      # Choose one of the following methods to set environment variables
      # 1. Set variables directly in the compose file
      PUID: 1002
      PGID: 1002
      #TZ: Australia/Melbourne

      # 2. Set variables via substitution from .env file
      # PUID: ${WATCHTOWER_PUID} # TODO: not resepecting the .env file, using direct values for now
      # PGID: ${WATCHTOWER_PGID} # TODO: not resepecting the .env file, using direct values for now
      TZ: ${TZ:-Australia/Melbourne}

      WATCHTOWER_CLEANUP: true
      WATCHTOWER_INCLUDE_RESTARTING: true
      WATCHTOWER_INCLUDE_STOPPED: true
      WATCHTOWER_REVIVE_STOPPED: false
      WATCHTOWER_NO_RESTART: false
      WATCHTOWER_TIMEOUT: 30s              # give 30s for container to gracefully stop
      WATCHTOWER_SCHEDULE: 0 0 4 * * *     # run at 4am every day
      #WATCHTOWER_POLL_INTERVAL: 30
      WATCHTOWER_DEBUG: false
      WATCHTOWER_MONITOR_ONLY: false       # do not update containers, only notify
      
      ## Uncomment the below for email notifications. Variables set in the .env
      # WATCHTOWER_NOTIFICATIONS: email
      # WATCHTOWER_NOTIFICATION_EMAIL_FROM: ${EMAIL_FROM:?Please configure EMAIL_FROM in .env file}
      # WATCHTOWER_NOTIFICATION_EMAIL_TO: ${EMAIL_TO:?Please configure EMAIL_TO in .env file}
      # WATCHTOWER_NOTIFICATION_EMAIL_SERVER: ${EMAIL_SERVER_HOST:?Please configure EMAIL_SERVER_HOST in .env file}
      # WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT: ${EMAIL_SERVER_PORT:?Please configure EMAIL_SERVER_PORT in .env file}
      # WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER: ${EMAIL_FROM:?Please configure EMAIL_FROM in .env file}
      # WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD: /run/secrets/email_server_password  # using app password
      
      # For Notifiarr / discord notifications
      WATCHTOWER_NOTIFICATION_REPORT: true
      WATCHTOWER_NOTIFICATION_URL: /run/secrets/watchtower_discord_API
      
      # Simple template for the notification
      WATCHTOWER_NOTIFICATION_TEMPLATE: |
        {{- if .Report -}}
          {{- with .Report -}}
        {{len .Scanned}} Scanned, {{len .Updated}} Updated, {{len .Failed}} Failed
              {{- range .Updated}} 
        - {{.Name}} ({{.ImageName}}): {{.CurrentImageID.ShortID}} updated to {{.LatestImageID.ShortID}}
              {{- end -}}
              {{- range .Fresh}}
        - {{.Name}} ({{.ImageName}}): {{.State}}
            {{- end -}}
            {{- range .Skipped}}
        - {{.Name}} ({{.ImageName}}): {{.State}}: {{.Error}}
            {{- end -}}
            {{- range .Failed}}
        - {{.Name}} ({{.ImageName}}): {{.State}}: {{.Error}}
            {{- end -}}
          {{- end -}}
        {{- else -}}
          {{range .Entries -}}{{.Message}}{{"\n"}}{{- end -}}
        {{- end -}}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    # the 'command' flag not needed if wanting to watch all active containers
    #command: --interval 30 portainer watchtower 

# Using the secrets workaround from https://blog.mikesir87.io/2017/05/using-docker-secrets-during-development/
secrets:
  email_server_password:
    file: ${SECRETS:?Please configure SECRETS in .env file}/watchtower/email_server_password
  watchtower_discord_API:
    file: ${SECRETS:?Please configure SECRETS in .env file}/watchtower/notifiarr_watchtower_api
