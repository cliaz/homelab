name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on: [push]

jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."

  docker-compose-validation v1:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      
      - name: Check Docker version
        run: docker --version

      - name: Finding all compose files
        id: finding-files        
        run: |
          {
            echo 'FILELIST<<EOF'
            find . -name 'docker-compose.yml' -print 
            echo EOF
          } > $GITHUB_ENV

      - name: Do something with each file
        run: |
          for i in $FILELIST; do
            echo "Do something with file ${i}"
          done  

      - name: Do something with each compose file
        run: |
          echo "Found the following compose files:"
          echo "${{ steps.finding-files.outputs.FILELIST }}"
          echo "Now we can do something with each file"

docker-compose-validation v2:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      
      - name: Check Docker version
        run: docker --version

      - name: Finding all compose files
        id: finding-files        
        run: |
          { IFS=$'\n'; files=($(find . -name 'docker-compose.yml')); echo "::set-output name=FILELIST::${files[*]}"; }

      - name: Do something with each compose file
        run: |
          echo "Found the following compose files:"
          echo "${{ steps.finding-files.outputs.FILELIST }}"
          echo "Now we can do something with each file"

